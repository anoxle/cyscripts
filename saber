do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then local v74=0;while true do if (v74==0) then v20=v0(v3(v31,1,1));return "";end end else local v75=v2(v0(v31,16));if v20 then local v97=v5(v75,v20);v20=nil;return v97;else return v75;end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v32=v24();local v33=v24();local v34=1;local v35=(v21(v33,2 -1 ,35 -(13 + 2) ) * ((7 -5)^(31 + 1))) + v32 ;local v36=v21(v33,61 -40 ,89 -58 );local v37=((v21(v33,7 + 25 )==(2 -(2 -1))) and  -(1 + 0)) or ((569 + 568) -(396 + 740)) ;if (v36==(0 -(439 -(230 + 209)))) then if (v35==(0 -(0 + 0))) then return v37 * 0 ;else v36=1205 -(628 + (1692 -(674 + 442))) ;v34=0 + 0 ;end elseif (v36==(904 + 1143)) then return ((v35==(0 -0)) and (v37 * (1/0))) or (v37 * NaN) ;end return v8(v37,v36-(512 + 206 + 305) ) * (v34 + (v35/(2^((1958 + 50) -(660 + 1296))))) ;end v26=nil;function v26(v38)local v39;if  not v38 then local v76=(3953 -2976) -(972 + 5) ;while true do if (v76==((0 + 0) -0)) then v38=v24();if (v38==(0 -0)) then return "";end break;end end end v39=v3(v16,v19,(v19 + v38) -(561 -(377 + (779 -(575 + 21)))) );v19=v19 + v38 ;local v40={};for v67=2 -1 , #v39 do v40[v67]=v2(v1(v3(v39,v67,v67)));end return v6(v40);end v27=v24;v18=4;end if (v18==2) then function v23()local v41,v42=v1(v16,v19,v19 + (4 -2) );v19=v19 + (6 -4) ;return (v42 * 256) + v41 ;end v24=nil;function v24()local v43=0 + 0 ;local v44;local v45;local v46;local v47;while true do if (1==v43) then return (v47 * (42339374 -25562158)) + (v46 * (218130 -(274939 -122345))) + (v45 * (513 -(107 + 150))) + v44 ;end if (v43==(838 -(709 + 129))) then v44,v45,v46,v47=v1(v16,v19,v19 + ((257 + 353) -(361 + 246)) );v19=v19 + 4 ;v43=2 -1 ;end end end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v48,v49,v50)local v51=v48[1];local v52=v48[2];local v53=v48[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v77=v51;local v78=v52;local v79=v53;local v80=v28;local v81={};local v82={};local v83={};for v90=1757 -(1530 + (470 -(212 + 31))) ,v72 do if (((74 -55)==(30 -11)) and (v90>=v79)) then v81[v90-v79 ]=v71[v90 + ((4365 -3182) -(501 + 681)) ];else v83[v90]=v71[v90 + (3 -2) ];end end local v84=(v72-v79) + (1814 -(471 + (1756 -(198 + 216)))) ;local v85;local v86;while true do local v91=0;local v92;local v93;while true do if (((2026 -1618)==(369 + (280 -(14 + 227)))) and (v91==(0 + 0))) then v92=0;v93=nil;v91=(405 + 147) -(92 + 459) ;end if ((v91==(999 -(437 + 561))) or ((643 + 831)>(1213 + 2410))) then while true do if (((370 + 1498)==1868) and (v92==(0 -0))) then v93=305 -(117 + 188) ;while true do if ((v93==1) or (4882<=(3347 -1367))) then if (((2775 -(98 + 39))>=71) and (v86<=(12 + 0 + 0))) then if ((1107<=(1789 -(200 + 25))) and (v86<=(13 -8))) then if (((12352 -7558)>(1912 -(434 + 240))) and (v86<=(1185 -(248 + 935)))) then if ((v86<=0) or ((9934 -6019)<(262 + 1362))) then v83[v85[2 + 0 ]]=v85[8 -5 ];elseif ((v86>1) or ((2482 -(1584 + 310))==(3165 + 133))) then v69=v85[675 -(379 + (812 -519)) ];else local v129=0 + 0 ;local v130;local v131;local v132;local v133;while true do if ((254<=(3949 -(814 + 160))) and (v129==2)) then while true do if ((v130==1) or ((12002 -9569)>2914)) then v133={};v132=v10({},{__index=function(v227,v228)local v229=0;local v230;local v231;while true do if ((536<=(3941 -(35 + (436 -85)))) and ((0 + 0)==v229)) then v230=0;v231=nil;v229=1;end if ((3534>=1697) and (v229==(1378 -(1201 + (1283 -(770 + 337)))))) then while true do if ((v230==0) or ((97 + 915)>(92 + 3160))) then v231=v133[v228];return v231[1 -0 ][v231[985 -(627 + 356) ]];end end break;end end end,__newindex=function(v232,v233,v234)local v235=0;local v236;local v237;while true do if ((v235==(1 + 0)) or ((1939 -(736 + 493))==(4085 -(180 + 747)))) then while true do if ((v236==0) or ((4501 + 328)<=2457)) then v237=v133[v233];v237[234 -(133 + 100) ][v237[6 -4 ]]=v234;break;end end break;end if ((v235==(0 -0)) or (4311==(2304 + 2137))) then v236=0;v237=nil;v235=1 + 0 ;end end end});v130=2;end if ((786<(2769 -808)) and (v130==(0 + 0))) then v131=v78[v85[1064 -(516 + 545) ]];v132=nil;v130=1;end if (((25 + 21)<(10949 -(6442 -(195 + 287)))) and (v130==(563 -(27 + 534)))) then for v238=1,v85[12 -8 ] do local v239=0 + 0 + 0 ;local v240;local v241;while true do if (((9429 -5806)<((2785 + 1493) -(39 + 53))) and (v239==(0 -0))) then v240=0;v241=nil;v239=2 -1 ;end if ((v239==(1 -0)) or ((3275 -2060)==(1076 -(350 + 277)))) then while true do if (((479 + 3673)>=(502 + 1688)) and (v240==(0 -0))) then local v260=0 + (511 -(273 + 238)) ;while true do if ((v260==(660 -(478 + 181))) or ((6199 -2823)>=(6369 -2267))) then v240=1;break;end if (((2770 + (2207 -594))>=(4426 -((2434 -(401 + 501)) + 309))) and (v260==(0 + 0))) then v69=v69 + (1697 -(533 + (1517 -(234 + 120)))) ;v241=v77[v69];v260=1 -0 ;end end end if ((275<(3035 + (1661 -(442 + 90)))) and (v240==1)) then if ((v241[(209 -94) -(36 + 78) ]==((23 + 30) -42)) or ((1291 + 713)<(3475 -(244 + 1347)))) then v133[v238-(1136 -(1090 + 45)) ]={v83,v241[120 -(29 + 88) ]};else v133[v238-(1829 -(1420 + 408)) ]={v49,v241[3 + 0 ]};end v82[ #v82 + 1 + 0 ]=v133;break;end end break;end end end v83[v85[(1408 -(554 + 853)) + 1 ]]=v30(v131,v132,v50);break;end end break;end if ((3986>739) and (v129==1)) then v132=nil;v133=nil;v129=2 + 0 ;end if (((0 + 0 + 0)==v129) or ((7030 -(6702 -4146))<=(1046 + 2848))) then v130=0 + (0 -0) ;v131=nil;v129=1;end end end elseif (((448 + 2061)>(2811 -(232 + 566))) and (v86<=(11 -8))) then local v122=0 + 0 ;local v123;local v124;while true do if (((0 -0)==v122) or (2285>(5419 -(289 + 1194)))) then local v189=(0 -0) -0 ;while true do if ((v189==(590 -(372 + 217))) or ((2721 -(31 + 53 + 405))>(1000 + 3158))) then v122=1;break;end if ((v189==(0 -0)) or ((3047 -(74 + 847))<=(1332 -(394 + 116)))) then v123=v85[935 -((858 -330) + 405) ];v124={};v189=1 + 0 ;end end end if ((v122==1) or ((1950 -710)>=4861)) then for v192=1, #v82 do local v193=0 + 0 ;local v194;local v195;while true do if ((v193==1) or ((3596 -2011)>(5162 -(493 + 137 + 221)))) then while true do if (((11940 -7613)>=(2882 -(1483 + 306))) and (v194==(0 -0))) then v195=v82[v192];for v246=0, #v195 do local v247=0 -0 ;local v248;local v249;local v250;local v251;while true do if ((v247==(4 -2)) or ((5093 -(709 + 307))>(4384 -(102 + 106)))) then while true do if (((421 + (6626 -3522))==(2321 + 1204)) and (v248==(2 -1))) then v251=v249[1 + (2 -1) ];if (((550 + 3906)>=818) and (v250==v83) and (v251>=v123)) then local v276=234 -(220 + 12 + 2) ;local v277;local v278;while true do if ((v276==((738 -(440 + 105)) -(53 + 57 + 82))) or ((6792 -2512)<=(1640 + 2572))) then while true do if ((v277==0) or (2937==(13070 -8911))) then v278=757 -(163 + 594) ;while true do if ((v278==0) or ((2353 + 456)<(6406 -3679))) then v124[v251]=v250[v251];v249[1 + 0 ]=v124;break;end end break;end end break;end if ((2359<=(4865 -(277 + 412))) and (v276==(0 + 0))) then v277=0 + 0 ;v278=nil;v276=1 + 0 + 0 ;end end end break;end if (((0 -0)==v248) or ((5166 -(361 + 229))<(2577 -(159 + 204)))) then v249=v195[v246];v250=v249[1 -0 ];v248=(1671 -941) -(727 + 2) ;end end break;end if (((2503 -((2019 -(20 + 1962)) + 341))<(5625 -((2154 -(49 + 621)) + 125))) and (v247==(1226 -(1035 + 191)))) then v248=0 + 0 ;v249=nil;v247=1 -0 ;end if ((1065<(636 + 3394)) and (v247==(2 -1))) then v250=nil;v251=nil;v247=1 + 1 ;end end end break;end end break;end if (((516 -(371 + 145))==v193) or ((8562 -4347)<=1548)) then local v210=0 + 0 ;while true do if ((((2072 -808) -(172 + 421))==(98 + 573)) and (v210==((3858 -2714) -(236 + 908)))) then v194=0;v195=nil;v210=(1 + 0) -0 ;end if (((2111 + 2736)>(8630 -4896)) and (v210==1)) then v193=(2068 -(196 + 159)) -((919 -497) + 1290) ;break;end end end end end break;end end elseif (((2942 -(49 + 425))==(4130 -(104 + (3395 -(720 + 1117))))) and (v86==4)) then v83[v85[5 -(1 + 2) ]]=v30(v78[v85[3 -0 ]],nil,v50);else local v135=0 + 0 ;local v136;local v137;while true do if ((v135==(1 + 0)) or ((3192 -(470 + 860 + 188))<(1858 -(399 + 469)))) then while true do if ((2604<4722) and (v136==(277 -(224 + 53)))) then v137=v85[3 -1 ];v83[v137]=v83[v137](v83[v137 + (1932 -(1445 + 486)) ]);break;end end break;end if (((1251 + 677)<(8108 -4801)) and (v135==0)) then v136=230 -(50 + 180) ;v137=nil;v135=1 + 0 ;end end end elseif ((v86<=((414 + 1309) -(1189 + (858 -332)))) or ((1542 -(10 + 146))>=2918)) then if ((v86<=(19 -13)) or (3140<=1424)) then v83[v85[(52 + 344) -(161 + 215 + 18) ]]={};elseif ((v86>7) or (4245<=(814 -(122 + 101)))) then v83[v85[2 + 0 ]]=v83[v85[3]][v85[4]];else v83[v85[1633 -(173 + 1458) ]][v85[2 + (1 -0) ]]=v85[8 -4 ];end elseif (((33 + 1354)<(3086 -(342 + 1244))) and (v86<=(1848 -(1308 + 530)))) then if ((v86>(8 + 1)) or ((2246 -((233 -162) + 22))<(754 + 1019))) then v83[v85[2]]=v49[v85[2 + 1 + 0 ]];else local v144=0;local v145;local v146;while true do if (((1086 -447)<=(9735 -5565)) and (v144==(1441 -(148 + 1293)))) then v145=0;v146=nil;v144=1 -0 ;end if (((1 + 0)==v144) or (4915<1815)) then while true do if (((7197 -3352)==(2743 + 1102)) and (0==v145)) then v146=v85[1618 -(816 + (1832 -(503 + 529))) ];v83[v146]=v83[v146](v13(v83,v146 + (1 -0) ,v70));break;end end break;end end end elseif ((v86==(5 + 6)) or ((2314 -1071)>=3678)) then v83[v85[3 -1 ]]=v83[v85[(2 -1) + 2 ]];elseif (((2396 -1536)<(3478 -1506)) and (v85[2]==v83[v85[1171 -(921 + 246) ]])) then v69=v69 + ((5 -3) -1) ;else v69=v85[1 + 2 ];end elseif (((335 + 2117)>(449 + 74 + 586)) and (v86<=19)) then if ((4238>2786) and (v86<=(41 -26))) then if ((1926<=((5519 + 113) -(585 + 773))) and (v86<=(137 -(73 + 51)))) then do return;end elseif ((v86>(7 + 7)) or ((15421 -11980)<=((564 + 2564) -(226 + 840)))) then local v149=(1219 -(597 + 622)) -0 ;local v150;local v151;local v152;while true do if (((4033 -(259 + 100))>(2171 -840)) and (v149==(1526 -(941 + 584)))) then v152=nil;while true do if (((711 + 614)>(352 -241)) and (v150==(0 -0))) then local v217=0 + 0 ;while true do if (((3234 + 859)==(14009 -9916)) and (v217==0)) then v151=0 + 0 ;v152=nil;v217=2 -1 ;end if (((141 + 603)<(3367 -(161 + 143))) and (v217==(3 -2))) then v150=(4 -3) + 0 ;break;end end end if ((v150==(2 -1)) or ((4419 -(388 + 320))<=(1491 -761))) then while true do if ((v151==(854 -(789 + 65))) or ((461 -(210 + 49))==(3037 -1154))) then v152=v85[2];v83[v152](v13(v83,v152 + 1 + 0 + 0 ,v85[3 -0 ]));break;end end break;end end break;end if ((v149==(0 + 0)) or ((1245 + 1596)>=3546)) then v150=0 -0 ;v151=nil;v149=27 -(6 + 20) ;end end else v83[v85[5 -3 ]][v85[1 + 2 ]]=v83[v85[4]];end elseif ((40<((1148 -(473 + 128)) + 1710)) and (v86<=(1837 -(918 + 902)))) then if ((v86>((31 + 15) -(25 + 5))) or ((304 + 110)>=(4561 -(51 + 775)))) then v83[v85[1 + 1 ]]=v85[3]~=0 ;else v83[v85[1 + 1 ]]();end elseif (((152 + 55)<1731) and (v86>18)) then for v190=v85[672 -(353 + 317) ],v85[10 -7 ] do v83[v190]=nil;end elseif ((v83[v85[2]]==v83[v85[1722 -(1713 + 5) ]]) or ((1601 + 588)>(675 + 3899))) then v69=v69 + 1 + 0 ;else v69=v85[1621 -(136 + 203 + 1279) ];end elseif (((436 + 525 + 876)<(3295 -(77 + 263))) and (v86<=(706 -((848 -(325 + 92)) + 253)))) then if ((v86<=20) or (((809 + 3040) -2196)<=(4258 -2964))) then if ((v83[v85[3 -1 ]]==v85[4]) or ((447 + 2083)<=(1819 -(690 + 335)))) then v69=v69 + 1 ;else v69=v85[6 -3 ];end elseif ((1511>561) and (v86>(5 + 16))) then local v157=0;local v158;local v159;local v160;while true do if ((v157==(1519 -(930 + 589))) or ((2562 -(307 + 582))>3343)) then v158=0 + 0 ;v159=nil;v157=(3 -2) + (0 -0) ;end if ((v157==(1 + 0)) or ((427 + 1159)>(5784 -4043))) then v160=nil;while true do if ((v158==(2 -1)) or ((3911 -(125 + 963))==2445)) then while true do if (((0 + 0)==v159) or ((7121 -5294)<1357)) then v160=v85[2];v83[v160]=v83[v160]();break;end end break;end if (((314 + 2185)>=((468 + 54) -246)) and (v158==0)) then local v218=0 + 0 ;while true do if ((v218==(1 + 0)) or ((6190 -3879)>4410)) then v158=1 + 0 ;break;end if (((1872 -(98 + 519))<(5318 -(187 + 913))) and (v218==((2138 -(794 + 538)) -(192 + 614)))) then v159=1149 -((2763 -1884) + 270) ;v160=nil;v218=2 -1 ;end end end end break;end end else local v161=509 -(16 + 54 + 439) ;local v162;local v163;local v164;while true do if ((v161==0) or ((10160 -6919)<(487 + 1527))) then v162=0;v163=nil;v161=719 -(627 + 91) ;end if ((v161==1) or (((12553 -8340) -1791)<((3961 -2988) + 786))) then v164=nil;while true do if (((2137 + 1207 + 851)>=(113 + 4 + 3)) and (v162==(0 -0))) then local v219=0;while true do if ((v219==((302 -(103 + 199)) -(0 -0))) or ((9937 -7746)>(6140 -1921))) then v163=1990 -(1957 + 33) ;v164=nil;v219=1 + 0 ;end if ((v219==((2 + 0) -(1834 -(502 + 1331)))) or ((1236 + 1005)<=((1747 + 2215) -(1287 + 652)))) then v162=1;break;end end end if ((v162==((1623 -(1271 + 351)) + (1032 -(858 + 174)))) or ((4653 + 24)>(7850 -3123))) then while true do if (((0 -0)==v163) or (2031>(6900 -3149))) then v164=v85[8 -6 ];v83[v164]=v83[v164](v13(v83,v164 + (329 -(286 + 42)) ,v85[6 -3 ]));break;end end break;end end break;end end end elseif (((941 -((7 -2) + 139))==(2444 -(1491 + 156))) and (v86<=((84 -37) -23))) then if ((v86==(791 -(75 + 693))) or ((7720 -3471)<=((1092 -789) -212))) then local v165=0 + 0 ;local v166;local v167;local v168;local v169;local v170;while true do if ((v165==(462 -(85 + 375))) or ((493 + 116)==(3919 -(87 + 105)))) then v170=nil;while true do if ((1654<=(3036 -(243 + 287))) and (v166==(1 + 0 + (430 -(103 + 327))))) then local v220=284 -(187 + 53 + 44) ;while true do if (((0 -0)==v220) or ((3442 -(1113 + 391))>=((969 + 2924) -(128 + 513)))) then v70=(v169 + v167) -(304 -(86 + 217)) ;v170=0 -0 ;v220=1 + (0 -0) ;end if (((1162 + 2396)==((2832 -(936 + 453)) + 2115)) and (v220==(1 + 0))) then v166=2;break;end end end if ((v166==(3 -1)) or ((249 -108)>(12329 -9194))) then for v242=v167,v70 do local v243=(999 -524) -(273 + 202) ;local v244;while true do if ((((17725 -10100) -5298)>=(176 -140)) and (v243==(0 -0))) then v244=1156 -(336 + 820) ;while true do if (((4482 -((1673 -(346 + 42)) + (338 -175)))>=(2288 -(249 + 467))) and (v244==(0 + 0))) then v170=v170 + (1006 -(743 + 262)) ;v83[v242]=v168[v170];break;end end break;end end end break;end if ((v166==(464 -(432 + 32))) or ((2119 + 1098)==(6019 -3312))) then v167=v85[3 -1 ];v168,v169=v80(v83[v167](v13(v83,v167 + 1 ,v85[14 -11 ])));v166=158 -(140 + 17) ;end end break;end if ((4464>=(3780 -(1897 + 516))) and (v165==(337 -(283 + (76 -22))))) then v166=0 + 0 ;v167=nil;v165=2 -1 ;end if (((7905 -4941)>(152 + 1 + 74)) and (v165==1)) then v168=nil;v169=nil;v165=4 -2 ;end end else local v171=0 + 0 ;local v172;local v173;while true do if ((v171==(0 -0)) or ((2681 -1495)>(1920 -(126 + 86 + 179)))) then local v201=0 -0 ;while true do if ((v201==(1284 -(148 + 1135))) or ((1097 + 2070)>=(3428 + 820))) then v171=1 + 0 ;break;end if (((1551 -(24 + 99))>(1217 -(270 + 383 + 115))) and ((0 -0)==v201)) then v172=v85[1832 -(168 + 1662) ];v173=v83[v85[2 + (312 -(276 + 35)) ]];v201=1 + 0 + 0 ;end end end if (((5222 -(158 + 154))>(1997 -(694 + 616))) and (v171==(1124 -(101 + 349 + 673)))) then v83[v172 + (157 -(103 + 53)) ]=v173;v83[v172]=v173[v85[6 -2 ]];break;end end end elseif (((14595 -10359)>=(3510 -(492 + (1805 -(4 + 1504))))) and (v86==((55 -33) + 3))) then local v174=0;local v175;local v176;while true do if ((v174==(430 -(59 + 370))) or ((4249 + (504 -241))<(12567 -8224))) then while true do if (((2920 -1353)<(2836 -(5 + 7))) and (0==v175)) then v176=v85[2];v83[v176](v83[v176 + 1 + 0 ]);break;end end break;end if ((v174==(0 -0)) or ((50 + 121)>(1408 -(1200 -466)))) then v175=0 -0 ;v176=nil;v174=1 + 0 ;end end else v83[v85[(5 -2) -1 ]]=v50[v85[1500 -(489 + 1008) ]];end v69=v69 + 1 + 0 ;break;end if ((v93==(0 -0)) or (2361>=2479)) then local v107=898 -(692 + 206) ;local v108;while true do if (((7874 -6045)<=(3894 -(297 + 20))) and (v107==(596 -(128 + 468)))) then v108=1800 -(1582 + 218) ;while true do if (((4554 -2155)==2399) and (v108==1)) then v93=1;break;end if ((v108==0) or (((6170 + 334) -(1180 + 515))<=(494 + 2135))) then v85=v77[v69];v86=v85[1];v108=2 -1 ;end end break;end end end end break;end end break;end end end end A,B=v28(v11(v73));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v48[4][v69] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v54=26 -(7 + 19) ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54==(5 -3)) then v59=nil;v60=nil;v54=3;end if ((7 -3)~=v54) then else while true do if (v55~=(2 + 1)) then else v62=nil;while true do local v105=0;local v106;while true do if (v105==0) then v106=0 + 0 ;while true do if (v106==(1917 -(234 + 1683))) then local v110=0 -0 ;while true do if (v110~=0) then else if (v56==0) then local v117=0 + 0 ;local v118;while true do if (v117~=0) then else v118=0 -0 ;while true do if (v118~=0) then else local v198=688 -(469 + 219) ;local v199;while true do if (v198~=0) then else v199=0 -0 ;while true do if (v199==0) then v57={};v58={};v199=1;end if (1==v199) then v118=1 + 0 ;break;end end break;end end end if ((744 -(106 + 637))~=v118) then else v59={};v56=1 + 0 ;break;end end break;end end end if (v56==2) then local v119=953 -(130 + 823) ;while true do if (v119~=0) then else local v126=729 -(215 + 514) ;while true do if (v126==(1 + 0)) then v119=1;break;end if (v126==(697 -(189 + 508))) then for v205=2 -1 ,v61 do local v206=0;local v207;local v208;while true do if (v206==(4 -3)) then if (v207==(224 -(198 + 25))) then v208=v22()~=(662 -(633 + 29)) ;elseif (v207==(908 -(765 + 141))) then v208=v25();elseif (v207==(1 + 2)) then v208=v26();end v62[v205]=v208;break;end if (v206~=(0 + 0)) then else v207=v22();v208=nil;v206=2 -1 ;end end end v60[2 + 1 ]=v22();v126=1;end end end if ((1698 -(853 + 844))~=v119) then else for v179=1,v24() do local v180=326 -(14 + 312) ;local v181;local v182;local v183;local v184;while true do if (v180==0) then v181=0;v182=nil;v180=1 + 0 ;end if (v180==1) then v183=nil;v184=nil;v180=2;end if (v180~=2) then else while true do if ((2 -1)==v181) then v184=nil;while true do if (v182~=(0 -0)) then else v183=0;v184=nil;v182=196 -(168 + 27) ;end if (v182~=1) then else while true do if (v183==(207 -(105 + 102))) then v184=v22();if (v21(v184,1,2 -1 )==0) then local v264=0;local v265;local v266;local v267;local v268;local v269;while true do if (v264==(2 -1)) then v267=nil;v268=nil;v264=2;end if (v264==(827 -(502 + 325))) then v265=0;v266=nil;v264=2 -1 ;end if (v264==2) then v269=nil;while true do if (v265==(0 + 0)) then local v279=0 -0 ;while true do if (1==v279) then v265=3 -2 ;break;end if (v279~=0) then else v266=0 + 0 ;v267=nil;v279=1 + 0 ;end end end if (v265==(918 -(60 + 857))) then v268=nil;v269=nil;v265=2 -0 ;end if (v265~=(2 -0)) then else while true do if (v266==1) then local v280=0 -0 ;local v281;while true do if (v280==0) then v281=0 -0 ;while true do if ((2 -1)==v281) then v266=7 -5 ;break;end if ((0 + 0)==v281) then local v293=0;while true do if (v293~=(0 -0)) then else local v295=0;while true do if (v295~=1) then else v293=1;break;end if (v295==0) then v269={v23(),v23(),nil,nil};if (v267==(0 + 0)) then local v300=1488 -(640 + 848) ;local v301;local v302;while true do if (v300==0) then v301=0;v302=nil;v300=2 -1 ;end if (v300==(1 + 0)) then while true do if (v301~=(0 -0)) then else v302=0 -0 ;while true do if (v302==0) then v269[3]=v23();v269[4]=v23();break;end end break;end end break;end end elseif (v267==1) then v269[3]=v24();elseif (v267==(2 + 0)) then v269[3]=v24() -(2^16) ;elseif (v267==(531 -(155 + 373))) then local v305=947 -(665 + 282) ;local v306;local v307;local v308;while true do if ((1 -0)~=v305) then else v308=nil;while true do if (0~=v306) then else v307=0;v308=nil;v306=1;end if (v306==1) then while true do if (v307==(0 -0)) then v308=0;while true do if ((0 + 0)==v308) then v269[3]=v24() -((760 -(537 + 221))^(13 + 3)) ;v269[4]=v23();break;end end break;end end break;end end break;end if (v305==(0 -0)) then v306=0;v307=nil;v305=1;end end end v295=1 + 0 ;end end end if (v293==(2 -1)) then v281=2 -1 ;break;end end end end break;end end end if ((0 -0)~=v266) then else local v282=1380 -(355 + 1025) ;while true do if (v282==1) then v266=1613 -(720 + 892) ;break;end if (v282==0) then local v291=0 + 0 ;local v292;while true do if (v291==0) then v292=0;while true do if (v292~=(0 -0)) then else v267=v21(v184,2,3);v268=v21(v184,15 -11 ,868 -(350 + 512) );v292=1;end if (v292==1) then v282=1656 -(665 + 990) ;break;end end break;end end end end end if (v266==(532 -(259 + 271))) then local v283=1085 -(609 + 476) ;local v284;while true do if (v283==0) then v284=742 -(528 + 214) ;while true do if (v284==(0 + 0)) then local v294=0;while true do if (v294==0) then if (v21(v268,1,2 -1 )==1) then v269[2]=v62[v269[2 + 0 ]];end if (v21(v268,1 + 1 ,1 + 1 )==(2 -1)) then v269[3]=v62[v269[1705 -(1274 + 428) ]];end v294=1 -0 ;end if (v294~=1) then else v284=1 -0 ;break;end end end if (v284==(1 -0)) then v266=2 + 1 ;break;end end break;end end end if (v266~=3) then else if (v21(v268,835 -(32 + 800) ,2 + 1 )==(1832 -(801 + 1030))) then v269[4]=v62[v269[9 -5 ]];end v57[v179]=v269;break;end end break;end end break;end end end break;end end break;end end break;end if (v181==(1011 -(736 + 275))) then local v226=0 + 0 ;while true do if (v226~=(0 + 0)) then else v182=0;v183=nil;v226=61 -(10 + 50) ;end if (v226==1) then v181=1598 -(1444 + 153) ;break;end end end end break;end end end v56=3;break;end end end v110=840 -(82 + 757) ;end if (v110==(1 -0)) then v106=1;break;end end end if ((500 -(158 + 341))~=v106) then else if (v56==3) then local v111=0;local v112;while true do if ((0 -0)~=v111) then else v112=0 -0 ;while true do if (v112==(1 + 0)) then return v60;end if (v112==(0 + 0)) then for v185=1 + 0 ,v24() do v58[v185-(1509 -(1027 + 481)) ]=v29();end for v187=1,v24() do v59[v187]=v24();end v112=1;end end break;end end end if (v56~=1) then else local v113=0;local v114;while true do if (v113==0) then v114=0;while true do if (v114~=(1 -0)) then else v62={};v56=970 -(878 + 90) ;break;end if (v114==(780 -(272 + 508))) then local v127=740 -(573 + 167) ;while true do if ((921 -(230 + 690))==v127) then v114=1362 -(997 + 364) ;break;end if (v127==(0 + 0)) then v60={v57,v58,nil,v59};v61=v24();v127=970 -(853 + 116) ;end end end end break;end end end break;end end break;end end end break;end if (v55~=1) then else local v102=0;local v103;while true do if (v102==(1423 -(677 + 746))) then v103=0;while true do if (v103~=(0 + 0)) then else local v109=0;while true do if (v109~=(1 + 0)) then else v103=80 -(22 + 57) ;break;end if (v109~=(0 + 0)) then else v58=nil;v59=nil;v109=1 + 0 ;end end end if (v103==(1 + 0)) then v55=2;break;end end break;end end end if (v55==(570 -(520 + 50))) then v56=1841 -(1562 + 279) ;v57=nil;v55=1 -0 ;end if (v55==2) then local v104=379 -(214 + 165) ;while true do if (v104~=1) then else v55=3;break;end if (v104==0) then v60=nil;v61=nil;v104=1;end end end end break;end if (v54==1) then local v96=0 + 0 ;while true do if (v96==0) then v57=nil;v58=nil;v96=1;end if (v96~=(1 + 0)) then else v54=1 + 1 ;break;end end end if (v54~=(1613 -(1068 + 542))) then else v61=nil;v62=nil;v54=4;end if (v54~=(0 -0)) then else v55=0;v56=nil;v54=2 -1 ;end end end v18=5;end if (v18==1) then function v21(v63,v64,v65)if v65 then local v87=(v63/((159 -(13 + 144))^(v64-(1 + 0))))%((3 -1)^(((v65-(188 -(134 + 53))) -(v64-(1235 -(798 + 436)))) + 1 + 0)) ;return v87-(v87%(1 -0)) ;else local v88=1636 -(1618 + 12 + 6) ;local v89;while true do if (v88==(0 -0)) then v89=(1828 -(1370 + 456))^(v64-((538 + 59) -(459 + 137))) ;return (((v63%(v89 + v89))>=v89) and ((1254 + 584) -(1260 + 577))) or (0 -0) ;end end end end v22=nil;function v22()local v66=v1(v16,v19,v19);v19=v19 + 1 ;return v66;end v23=nil;v18=2;end end end vv9(),...);end
